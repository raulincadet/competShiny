{"frames":[{"func":"df %>% rename(`Country Name` = `Country Name.x`) %>% select(`Country Code`, \n    `Country Name`, Region, IncomeGroup, Cases, Deaths, Population, \n    PIBcapita, Tourists, HDI, Vaccinated_people, `Population older than 65 years (%)`, \n    `Population older than 70 years (%)`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., `Country Code`, `Country Name`, Region, IncomeGroup, \n    Cases, Deaths, Population, PIBcapita, Tourists, HDI, Vaccinated_people, \n    `Population older than 65 years (%)`, `Population older than 70 years (%)`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename(., `Country Name` = `Country Name.x`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename.data.frame(., `Country Name` = `Country Name.x`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tidyselect::eval_rename(expr(c(...)), .data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename_impl(data, names(data), as_quosure(expr, env), strict = strict, \n    name_spec = name_spec)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_select_impl(x, names, {\n    {\n        sel\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_subscript_errors(vars_select_eval(vars, expr, strict, data = x, \n    name_spec = name_spec, uniquely_named = uniquely_named, allow_rename = allow_rename, \n    type = type), type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(instrument_base_errors(expr), vctrs_error_subscript = function(cnd) {\n    cnd$subscript_action <- subscript_action(type)\n    cnd$subscript_elt <- \"column\"\n    cnd_signal(cnd) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang:::signal_abort(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Can't rename columns that don't exist.\n\u001B[31mx\u001B[39m Column `Country Name.x` doesn't exist.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}